<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OWSPublicAPI</name>
    </assembly>
    <members>
        <member name="T:OWSPublicAPI.Controllers.AccountController">
            <summary>
            Public Account related API calls.
            </summary>
            <remarks>
            Contains account related API calls that are all publicly accessible.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.#ctor(Microsoft.Extensions.Logging.ILogger{OWSPublicAPI.Controllers.AccountController},SimpleInjector.Container,OWSData.Repositories.Interfaces.IAccountRepository,OWSExternalLoginProviders.Interfaces.IExternalLoginProviderFactory,OWSData.Repositories.Interfaces.ICharactersRepository,OWSShared.Interfaces.IPublicAPIInputValidation,OWSShared.Interfaces.IHeaderCustomerGUID,Microsoft.Extensions.Options.IOptions{OWSShared.Options.PublicAPIOptions},Microsoft.Extensions.Options.IOptions{OWSShared.Options.APIPathOptions},System.Net.Http.IHttpClientFactory)">
            <summary>
            Constructor for Public Account related API calls.
            </summary>
            <remarks>
            All dependencies are injected.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.CreateCharacter(OWSPublicAPI.Requests.Account.CreateCharacterRequest)">
            <summary>
            Creates a new Character.
            </summary>
            <remarks>
            Create a new Character and attach it to the Account referenced by the AccountSessionGUID. ClassName is the name of the Class you setup in the management console (from the Characters tab). 
            Classes are meant to be default values for creating characters. The purpose is to ensure that players are not able to hack their starting stats. This is needed because Characters are created from and unsecure UE client
            that has not connected to a UE server yet.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.CreateCharacterUsingDefaultCharacterValues(OWSPublicAPI.DTOs.CreateCharacterUsingDefaultCharacterValuesDTO)">
            <summary>
            Creates a new Character using DefaultCharacterValues.
            </summary>
            <remarks>
            Create a new Character and attach it to the Account referenced by the AccountSessionGUID. DefaultSetName is the name of the DefaultCharacterValues row. 
            DefaultCharacterValues and DefaultCustomCharacterData are used to set the default starting values for new characters. The purpose is to ensure that players are not able to hack their starting stats. This is needed because Characters are created from and unsecure UE client
            that has not connected to a UE server yet.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.GetAllCharacters(OWSPublicAPI.Requests.Account.GetAllCharactersRequest)">
            <summary>
            Get All Characters for a specified Account.
            </summary>
            <remarks>
            Send in a AccountSessionGUID to specify which Account to get all Characters for.  Use GetAllCharactersWithCustomData to also get all attached custom data with the same API call.
            Accounts may have zero or more Characters.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.GetPlayerGroupsCharacterIsIn(OWSPublicAPI.Requests.Account.GetPlayerGroupsCharacterIsInRequest)">
            <summary>
            Gets a list of Player Groups that a Character is in.
            </summary>
            <remarks>
            Send a AccountSessionGUID, a Character's CharacterName, and a PlayerGroupTypeID to get a list of groups the player is in.  Set the PlayerGroupTypeID parameter to zero to remove the Player Group Type filter.
            Player Groups are persistent across player sessions and can be used to manage Party groups, Raid groups, Guilds, etc.
            See the PlayerGroupTypes table for a list of Player Group Types.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.GetServerToConnectTo(OWSPublicAPI.Requests.Account.GetServerToConnectToRequest)">
            <summary>
            Gets the server to connect to for a specific character or zonename.
            </summary>
            <remarks>
            Get the Zone Server to travel to based on the Account referenced by the AccountSessionGUID.  Prior to calling this API, you MUST set the Selected Character to connect with using the AccountSessionSetSelectedCharacter API for the AccountSessionGUID passed into this API.
            Send in an empty ZoneName or ZoneName set to "GETLASTZONENAME" to use the last zone the Character was on rather than specifying a ZoneName.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.GetAccountSession(OWSPublicAPI.Requests.Account.GetAccountSessionRequest)">
            <summary>
            Gets the Account Session from a AccountSessionGUID.
            </summary>
            <remarks>
            Get the Account Session object (some values may be null if a selected character is not set).
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.LoginAndCreateSession(OWSPublicAPI.Requests.Account.LoginAndCreateSessionRequest)">
            <summary>
            Login and create a Account Session that you can reference via a AccountSessionGUID.
            </summary>
            <remarks>
            Login by passing an Email and Password.  See ExternalLoginAndCreateSession when using an external login provider (such as Epic Game Store or Xsolla).
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.ExternalLoginAndCreateSession(OWSPublicAPI.Requests.Account.ExternalLoginAndCreateSessionRequest)">
            <summary>
            Login and create a Account Session using an External Login Provider (such as Epic Game Store or Xsolla).
            </summary>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.Logout(OWSPublicAPI.DTOs.LogoutDTO)">
            <summary>
            Logout of a Account Session
            </summary>
            <remarks>
            Logout of a Account Session based on a AccountSessionGUID.  This method is for logout from the client side of a game before connecting to a UE server.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.AccountSessionSetSelectedCharacter(OWSPublicAPI.Requests.Account.AccountSessionSetSelectedCharacterRequest)">
            <summary>
            Set the Character that has been selected to play for a Account Session (AccountSessionGUID).
            </summary>
            <remarks>
            This method MUST be called on a Account Session before calling the GetServerToConnectTo API.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.SetSelectedCharacterAndGetAccountSession(OWSPublicAPI.Requests.Account.SetSelectedCharacterAndGetAccountSessionRequest)">
            <summary>
            Set the Character that has been selected to play for a Account Session (AccountSessionGUID) and get the complete Account Session object all in one API call.
            </summary>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.RegisterAccount(OWSPublicAPI.DTOs.RegisterAccountDTO)">
            <summary>
            Register a new account by sending FirstName, LastName, Email, and Password.
            </summary>
            <remarks>
            Register a new Account and then Logs the Account in and Creates a Account Session.  Implement your own IPublicAPIInputValidation to specify your specific validation rules for FirstName, LastName, Email, and Password.  You can wire up the dependency injection for your custom IPublicAPIInputValidation in Startup.cs.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.AccountController.RemoveCharacter(OWSPublicAPI.Requests.Account.RemoveCharacterRequest)">
            <summary>
            Remove a Character from this Account (AccountSessionGUID).
            </summary>
            <remarks>
            Removes a Character from the Account.  This method permanently deletes the character and all associated data.  In the future, it might make sense to modify this to only mark the character as removed to support restoring an accidentally removed character.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Controllers.CharactersController">
            <summary>
            Public Character related API calls.
            </summary>
            <remarks>
            Contains character related API calls that are all publicly accessible.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.CharactersController.#ctor(SimpleInjector.Container,OWSData.Repositories.Interfaces.IAccountRepository,OWSData.Repositories.Interfaces.ICharactersRepository,OWSShared.Interfaces.IHeaderCustomerGUID,OWSShared.Interfaces.ICustomCharacterDataSelector,OWSShared.Interfaces.IGetReadOnlyPublicCharacterData)">
            <summary>
            Constructor for Public Character related API calls.
            </summary>
            <remarks>
            All dependencies are injected.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.CharactersController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            OnActionExecuting override
            </summary>
            <remarks>
            Checks for an empty IHeaderCustomerGUID.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.CharactersController.GetByName(OWSPublicAPI.DTOs.GetByNameDTO)">
            <summary>
            Get Characters Data by Character Name.
            </summary>
            <remarks>
            Gets a Characters by Name.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Controllers.SystemController">
            <summary>
            Public System API calls.
            </summary>
            <remarks>
            Contains system related API calls that are all publicly accessible.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.SystemController.Status">
            <summary>
            Gets the Api Status.
            </summary>
            <remarks>
            Get the Api Status and return true
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.DTOs.CreateCharacterUsingDefaultCharacterValuesDTO">
            <summary>
            CreateCharacterUsingDefaultCharacterValues Data Transfer Object
            </summary>
            <remarks>
            The object is used to collect input from the CreateCharacterUsingDefaultCharacterValues Request
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.DTOs.CreateCharacterUsingDefaultCharacterValuesDTO.AccountSessionID">
            <summary>
            UserSessionGUID Request Paramater.
            </summary>
            <remarks>
            Contains the Account Session ID from the request.  This identifies the User we are modifying.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.DTOs.CreateCharacterUsingDefaultCharacterValuesDTO.CharacterName">
            <summary>
            CharacterName Request Paramater.
            </summary>
            <remarks>
            Contains the Character Name from the request.  This is the new Character Name to create.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.DTOs.CreateCharacterUsingDefaultCharacterValuesDTO.DefaultSetName">
            <summary>
            Default Set Name Paramater.
            </summary>
            <remarks>
            Contains the Default Set Name from the request.  This sets the default values for the new Character.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.DTOs.GetByNameDTO">
            <summary>
            GetByNameDTO data transfer object
            </summary>
            <remarks>
            GetByNameDTO is data transfer object for GetByNameRequest
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.DTOs.GetByNameDTO.AccountSessionGUID">
            <summary>
            AccountSessionGUID Request Parameter
            </summary>
            <remarks>
            Contains the Account Session GUID from the request
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.DTOs.GetByNameDTO.CharacterName">
            <summary>
            CharacterName Request Paramater
            </summary>
            <remarks>
            Contains the Character Name from the request
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.DTOs.RegisterAccountDTO">
            <summary>
            RegisterUser Data Transfer Object
            </summary>
            <remarks>
            This object is for collecting POST request parameters
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.DTOs.RegisterAccountDTO.Email">
            <summary>
            Email
            </summary>
            <remarks>
            Email for the user.  This value is not meant to be displayed in game.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.DTOs.RegisterAccountDTO.Password">
            <summary>
            Password
            </summary>
            <remarks>
            Password for the user.  Passwords are one way encrypted with SHA 256 and a 25 character Salt when using the MSSQL implementation of UsersRepository.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.DTOs.RegisterAccountDTO.AccountName">
            <summary>
            Account name
            </summary>
            <remarks>
            Account Name for the user.  This value is not meant to be displayed in game.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.DTOs.RegisterAccountDTO.Discord">
            <summary>
            Discord
            </summary>
            <remarks>
            Discord ID for the user.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Program">
            <summary>
            OWS Public API Program
            </summary>
            <remarks>
            The program class.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Program.Main(System.String[])">
            <summary>
            OWS Public API Main
            </summary>
            <remarks>
            The program entry point.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Program.CreateHostBuilder(System.String[])">
            <summary>
            OWS Public API CreateHostBuilder
            </summary>
            <remarks>
            Configure the web host.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Account.CreateCharacterRequest">
            <summary>
            CreateCharacterRequest Handler
            </summary>
            <remarks>
            Handles api/Account/CreateCharacter requests.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.CreateCharacterRequest.AccountSessionGUID">
            <summary>
            AccountSessionGUID Request Paramater.
            </summary>
            <remarks>
            Contains the Account Session GUID from the request.  This identifies the Account we are modifying.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.CreateCharacterRequest.CharacterName">
            <summary>
            CharacterName Request Paramater.
            </summary>
            <remarks>
            Contains the Character Name from the request.  This is the new Character Name to create.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.CreateCharacterRequest.ClassName">
            <summary>
            ClassName Request Paramater.
            </summary>
            <remarks>
            Contains the Class Name from the request.  This sets the default values for the new Character.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.CreateCharacterRequest.SetData(OWSData.Repositories.Interfaces.IAccountRepository,OWSShared.Interfaces.IPublicAPIInputValidation,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            Set Dependencies for CreateCharacterRequest
            </summary>
            <remarks>
            Injects the dependencies for the CreateCharacterRequest.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.CreateCharacterRequest.Handle">
            <summary>
            Handles the CreateCharacterRequest
            </summary>
            <remarks>
            Overrides IRequestHandler Handle().
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Account.CreateCharacterUsingDefaultCharacterValuesRequest">
            <summary>
            CreateCharacterRequest Handler
            </summary>
            <remarks>
            Handles api/Account/CreateCharacter requests.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.CreateCharacterUsingDefaultCharacterValuesRequest.#ctor(OWSPublicAPI.DTOs.CreateCharacterUsingDefaultCharacterValuesDTO,OWSData.Repositories.Interfaces.IAccountRepository,OWSData.Repositories.Interfaces.ICharactersRepository,OWSShared.Interfaces.IPublicAPIInputValidation,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            Constrcutor for CreateCharacterUsingDefaultCharacterValuesRequest
            </summary>
            <remarks>
            Injects the dependencies for the CreateCharacterUsingDefaultCharacterValuesRequest.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.CreateCharacterUsingDefaultCharacterValuesRequest.Handle">
            <summary>
            Handles the CreateCharacterRequest
            </summary>
            <remarks>
            Overrides IRequestHandler Handle().
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Account.ExternalLoginAndCreateSessionRequest">
            <summary>
            ExternalLoginAndCreateSessionRequest Handler
            </summary>
            <remarks>
            Handles api/Account/ExternalLoginAndCreateSession requests.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.ExternalLoginAndCreateSessionRequest.Email">
            <summary>
            Email Request Paramater.
            </summary>
            <remarks>
            The email is used as the primary ID for the sign in credentials.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.ExternalLoginAndCreateSessionRequest.Password">
            <summary>
            Password Request Paramater.
            </summary>
            <remarks>
            The password is part of the sign in credentials.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.ExternalLoginAndCreateSessionRequest.SetData(OWSData.Repositories.Interfaces.IAccountRepository,OWSExternalLoginProviders.Interfaces.IExternalLoginProviderFactory,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            Set Dependencies for ExternalLoginAndCreateSessionRequest
            </summary>
            <remarks>
            Injects the dependencies for the ExternalLoginAndCreateSessionRequest.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Account.GetAllCharactersRequest">
            <summary>
            GetAllCharactersRequest
            </summary>
            <remarks>
            This request object handles requests for api/Account/GetAllCharacters
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.GetAllCharactersRequest.AccountSessionGUID">
            <summary>
            AccountSessionGUID
            </summary>
            <remarks>
            This is the Account Session GUID to determine the Account to get all Characters for.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.GetAllCharactersRequest.SetData(OWSData.Repositories.Interfaces.IAccountRepository,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            SetData
            </summary>
            <remarks>
            Used to pass dependencies to the Request object (for performance reasons).
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.GetAllCharactersRequest.Handle">
            <summary>
            Handle
            </summary>
            <remarks>
            This handles the Request.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Account.GetPlayerGroupsCharacterIsInRequest">
            <summary>
            GetPlayerGroupsCharacterIsInRequest
            </summary>
            <remarks>
            This request object handles requests for api/Account/GetPlayerGroupsCharacterIsIn
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.GetPlayerGroupsCharacterIsInRequest.AccountSessionGUID">
            <summary>
            AccountSessionGUID
            </summary>
            <remarks>
            This is the Account Session GUID to determine the Account to get Player Groups for.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.GetPlayerGroupsCharacterIsInRequest.CharacterName">
            <summary>
            CharacterName
            </summary>
            <remarks>
            CharacterName filters the list of Player Groups to only return for this CharacterName.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.GetPlayerGroupsCharacterIsInRequest.PlayerGroupTypeID">
            <summary>
            PlayerGroupTypeID
            </summary>
            <remarks>
            PlayerGroupTypeID filters the list of Player Groups to only return for this PlayerGroupTypeID.  Set this parameter to zero to remove the Player Group Type filter.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.GetPlayerGroupsCharacterIsInRequest.SetData(OWSData.Repositories.Interfaces.IAccountRepository,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            SetData
            </summary>
            <remarks>
            Used to pass dependencies to the Request object (for performance reasons).
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.GetPlayerGroupsCharacterIsInRequest.Handle">
            <summary>
            Handle
            </summary>
            <remarks>
            This handles the Request.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Account.RegisterAccountRequest">
            <summary>
            Register a User
            </summary>
            <remarks>
            Register a user with the system.  You can control validation with a custom IIPublicAPIInputValidation implementation.  See DefaultPublicAPIInputValidation for an example.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.RegisterAccountRequest.#ctor(OWSPublicAPI.DTOs.RegisterAccountDTO,OWSData.Repositories.Interfaces.IAccountRepository,OWSExternalLoginProviders.Interfaces.IExternalLoginProviderFactory,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            RegisterUserRequest Constructor
            </summary>
            <remarks>
            Initialize the RegisterUserRequest object with dependencies
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.RegisterAccountRequest.Handle">
            <summary>
            RegisterUserRequest Request Handler
            </summary>
            <remarks>
            Handle the RegisterUserRequest request
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Account.RemoveCharacterRequest">
            <summary>
            RemoveCharacterRequest Handler
            </summary>
            <remarks>
            Handles api/Users/RemoveCharacter requests.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.RemoveCharacterRequest.AccountSessionGUID">
            <summary>
            UserSessionGUID Request Paramater.
            </summary>
            <remarks>
            Contains the User Session GUID from the request.  This identifies the User we are modifying.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Account.RemoveCharacterRequest.CharacterName">
            <summary>
            CharacterName Request Paramater.
            </summary>
            <remarks>
            Contains the Character Name from the request.  This is the new Character Name to create.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.RemoveCharacterRequest.SetData(OWSData.Repositories.Interfaces.IAccountRepository,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            Set Dependencies for CreateCharacterRequest
            </summary>
            <remarks>
            Injects the dependencies for the CreateCharacterRequest.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Account.RemoveCharacterRequest.Handle">
            <summary>
            Handles the CreateCharacterRequest
            </summary>
            <remarks>
            Overrides IRequestHandler Handle().
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Characters.GetByNameRequest">
            <summary>
            GetByNameRequest Handler
            </summary>
            <remarks>
            Handles api/Characters/GetByName requests.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Characters.GetByNameRequest.#ctor(OWSPublicAPI.DTOs.GetByNameDTO,OWSData.Repositories.Interfaces.IAccountRepository,OWSData.Repositories.Interfaces.ICharactersRepository,OWSShared.Interfaces.IHeaderCustomerGUID,OWSShared.Interfaces.ICustomCharacterDataSelector,OWSShared.Interfaces.IGetReadOnlyPublicCharacterData)">
            <summary>
            Constructor for GetByNameRequest
            </summary>
            <remarks>
            Injects the dependencies for the GetByNameRequest.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Characters.GetByNameRequest.Handle">
            <summary>
            Handles the GetByNameRequest
            </summary>
            <remarks>
            Overrides IRequestHandler Handle().
            </remarks>
        </member>
    </members>
</doc>
